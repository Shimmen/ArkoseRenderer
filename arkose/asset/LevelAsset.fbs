// LevelAsset - flatbuffers schema

include "CommonTypes.fbs";
include "StaticMeshAsset.fbs";

namespace Arkose.Asset;
file_identifier "ALVL";
file_extension "arklvl";

table Transform {
    position: Vec3 (native_inline);
    orientation: Quat (native_inline);
    scale: Vec3 (native_inline);
}

// This is not a great type.. we should make something more flexible
table ProbeGrid {
    dimensions: Vec3 (native_inline);
    spacing: Vec3 (native_inline);
    offset: Vec3 (native_inline);
}

table AutoExposure {
    // TODO: Currently unsupported!
}

table ManualExposure {
    f_number: float = 16.0;
    iso: float = 400.0;
    shutter_speed: float = 0.0025; // i.e. 1 / ISO
}

union CameraExposure {
    ManualExposure,
    AutoExposure,
}

table Camera {
    name: string;
    transform: Transform;
    exposure: CameraExposure;
}

table DirectionalLight {
    name: string;
    transform: Transform;

    color: Vec3 (native_inline);
    illuminance: float;

    // Used for shadow view matrix construction
    world_extent: float = 30.0;
}

table SpotLight {
    name: string;
    transform: Transform;

    color: Vec3 (native_inline);
    luminous_intensity: float;

    ies_profile: ImageIndirection;
}

union Light {
    DirectionalLight,
    SpotLight,
}

union MeshIndirection {
    asset: StaticMeshAsset, // asset directly
    path: Path, // path to asset
}

table SceneObject {
    name: string;
    transform: Transform;
    mesh_asset: MeshIndirection;
}

// This type is very ad-hoc and will likely need to be redone..
table LevelAsset {

    // Name of the level
    name: string;

    // All objects in this level
    objects: [SceneObject];

    // All lights in this level
    lights: [Light];

    // List of predetermined cameras, of which the first one is the default
    cameras: [Camera];

    // For use with spatial probe grid based algorithms such as DDGI
    probe_grid: ProbeGrid;

}

root_type LevelAsset;
