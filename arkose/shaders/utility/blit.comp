#version 460

#include <common.glsl>

layout(set = 0, binding = 0, rgba8) uniform restrict writeonly image2D targetImage;
layout(set = 0, binding = 1)        uniform                  sampler2D sourceTexture;

layout(local_size_x = 8, local_size_y = 8) in;
void main()
{
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 imgSize = ivec2(imageSize(targetImage).xy);

    if (any(greaterThanEqual(pixelCoord, imgSize))) {
        return;
    }

    vec2 sampleUV = (vec2(pixelCoord) + vec2(0.5)) / vec2(imgSize);
    vec4 sampledColor = texture(sourceTexture, sampleUV);
    imageStore(targetImage, pixelCoord, sampledColor);
}
