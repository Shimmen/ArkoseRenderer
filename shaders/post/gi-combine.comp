#version 460

layout(set = 0, binding = 0, rgba16f) restrict uniform image2D targetImg;

layout(set = 1, binding = 0) uniform sampler2D diffuseGiTex;
layout(set = 1, binding = 1) uniform sampler2D ambientOcclusionTex;

layout(push_constant) uniform PushConstants {
	bool includeDiffuseGI;
};

layout(local_size_x = 16, local_size_y = 16) in;
void main()
{
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(pixelCoord, imageSize(targetImg))))
        return;

    vec3 color = imageLoad(targetImg, pixelCoord).rgb;

    if (includeDiffuseGI) {
        float ao = texelFetch(ambientOcclusionTex, pixelCoord, 0).r;
        vec3 diffuseGI = texelFetch(diffuseGiTex, pixelCoord, 0).rgb;
        color += diffuseGI * ao;
    }

    imageStore(targetImg, pixelCoord, vec4(color, 1.0));
}
