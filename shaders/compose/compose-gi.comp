#version 460

#include <common/namedUniforms.glsl>

layout(set = 0, binding = 0, rgba16f) uniform writeonly image2D sceneColorWithGI;
layout(set = 0, binding = 1) uniform sampler2D sceneColorBeforeGI;
layout(set = 0, binding = 2) uniform sampler2D ambientOcclusionTex;

NAMED_UNIFORMS(pushConstants,
    uvec2 targetSize;
    bool withAmbientOcclusion;
)

layout(local_size_x = 32, local_size_y = 32) in;
void main()
{
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(pixelCoord, pushConstants.targetSize)))
        return;

    vec4 sceneColor = texelFetch(sceneColorBeforeGI, pixelCoord, 0);

    float ambientOccusion = 1.0;
    if (pushConstants.withAmbientOcclusion) {
        ambientOccusion = texelFetch(ambientOcclusionTex, pixelCoord, 0).r;
    }

    // TODO: Only apply to diffuse indirect!
    sceneColor.rgb *= ambientOccusion;

    imageStore(sceneColorWithGI, pixelCoord, sceneColor);
}
