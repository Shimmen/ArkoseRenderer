#version 460

#include <common/namedUniforms.glsl>

layout(set = 0, binding = 0, r32ui) uniform readonly uimage2D indexMap;

layout(set = 0, binding = 1) buffer writeonly ResultBlock {
    uint resultIndex;
};

NAMED_UNIFORMS(pushConstants,
    vec2 mousePosition;
)

layout(local_size_x = 16, local_size_y = 16) in;
void main()
{
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(pixelCoord, imageSize(indexMap))))
        return;

    vec2 fragCoord = vec2(pixelCoord) + vec2(0.5);
    if (all(lessThanEqual(abs(pushConstants.mousePosition - fragCoord), vec2(0.5)))) {
        uint index = imageLoad(indexMap, pixelCoord).r;
        resultIndex = index;
    }
}
